{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joevtap/Desktop/modal-consuming-context/contexts/ModalContext.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var ModalContext = /*#__PURE__*/createContext({});\nexport var ModalProvider = function ModalProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isModalActive = _useState[0],\n      setIsModalActive = _useState[1];\n\n  var showModal = function showModal() {\n    setIsModalActive(true);\n    console.log(isModalActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      showModal: showModal,\n      isModalActive: isModalActive,\n      setIsModalActive: setIsModalActive\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ModalProvider, \"TUpuAXXHIk8LQPksACdVv8djDT4=\");\n\n_c = ModalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["/home/joevtap/Desktop/modal-consuming-context/contexts/ModalContext.jsx"],"names":["createContext","useState","ModalContext","ModalProvider","children","isModalActive","setIsModalActive","showModal","console","log"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,IAAMC,YAAY,gBAAGF,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACDH,QAAQ,CAAC,KAAD,CADP;AAAA,MACpCI,aADoC;AAAA,MACrBC,gBADqB;;AAE3C,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAATA,SAAF;AAAaF,MAAAA,aAAa,EAAbA,aAAb;AAA4BC,MAAAA,gBAAgB,EAAhBA;AAA5B,KADX;AAAA,cAGKF;AAHL;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAdM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const ModalContext = createContext({});\n\nexport const ModalProvider = ({ children }) => {\n    const [isModalActive, setIsModalActive] = useState(false);\n    const showModal = () => {\n        setIsModalActive(true);\n        console.log(isModalActive);\n    };\n\n    return (\n        <ModalContext.Provider\n            value={{ showModal, isModalActive, setIsModalActive }}\n        >\n            {children}\n        </ModalContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}